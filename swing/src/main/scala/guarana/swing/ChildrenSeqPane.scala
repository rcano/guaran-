//AUTOGENERATED FILE, DO NOT MODIFY

package guarana
package swing

import language.implicitConversions
import java.awt.{Component as _, Menu as _, MenuBar as _, MenuItem as _, TextComponent as _, TextField as _, PopupMenu as _}
import javax.swing.Action as _

opaque type ChildrenSeqPane <: Pane  = javax.swing.JPanel & Pane
object ChildrenSeqPane extends VarsMap {
  val Nodes: SwingVar.Aux[ChildrenSeqPane, Seq[Node]] = SwingVar[ChildrenSeqPane, Seq[Node]]("nodes", c => (0 until c.getComponentCount).map(c.getComponent(_).asInstanceOf[Node]), (p, children) => { p.removeAll(); children foreach (n => p.add(n.unwrap)) })

  

  given ops: Ops.type = Ops
  object Ops {
    extension (v: ChildrenSeqPane) {
      def nodes: Var.Aux[Seq[Node], v.type] = ChildrenSeqPane.Nodes.asInstanceOf[Var.Aux[Seq[Node], v.type]]

      

      
      def unwrap: javax.swing.JPanel = v
    }
  }

  def wrap(v: javax.swing.JPanel) = v.asInstanceOf[ChildrenSeqPane]

  def init(v: ChildrenSeqPane): Scenegraph ?=> Unit = (sc: Scenegraph) ?=> {
    Pane.init(v)
    v.addPropertyChangeListener(varsPropertyListener(v))
    
    
  }
  
  
}